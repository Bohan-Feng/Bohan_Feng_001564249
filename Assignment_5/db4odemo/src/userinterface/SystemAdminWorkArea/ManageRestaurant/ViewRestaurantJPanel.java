/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea.ManageRestaurant;

import Business.EcoSystem;
import Business.Order.Order;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import com.db4o.reflect.generic.GenericObject;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bohan Feng
 */
public class ViewRestaurantJPanel extends javax.swing.JPanel {

    private JPanel container;
    private EcoSystem system;
    private Restaurant restaurtant;
    /**
     * Creates new form ViewRestaurantJPanel
     */
    public ViewRestaurantJPanel(JPanel upc, EcoSystem sys, Restaurant rest) {
        initComponents();
        this.container = upc;
        this.system = sys;
        this.restaurtant = rest;
        populateData();
    }
    
    /**
     * populate JPanel header and tables
     */
    void populateData(){
        labelHeader.setText(restaurtant+"");
        populateAdmin();
        populateOrders();
    }
    
    /**
     * populate admin info
     */
    void populateAdmin(){
        DefaultTableModel model = (DefaultTableModel)tblAdmins.getModel();
        model.setRowCount(0);
        for(UserAccount ua : restaurtant.getAdmins()){
            Object row[] = new Object[3];
            row[0] = ua.getEmployee().getId();
            row[1] = ua;
            row[2] = ua.getEmployee().getName();
            model.addRow(row);
        }
    }
    
    /**
     * populate order info
     */
    void populateOrders(){
        DefaultTableModel model = (DefaultTableModel)tblOrders.getModel();
        model.setRowCount(0);
        for(Order o :system.getOrderDirectory().getOrdersByRestaurnatID(this.restaurtant.getID())){
            Object row[] = new Object[5];
            row[0] = o;
            row[1] = o.getReceiverID() == -1 ? "not set" : system.getCustomerDirectory().getCustomerByID(o.getReceiverID());
            row[2] = o.getSenderID() == -1 ? "not set" : system.getDeliveryManDirectory().getDeliveryManByID(o.getSenderID());
            row[3] = o.getOrderInfo();
            row[4] = o.getStatus();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        labelHeader = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAdmins = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        btnAddAdmin = new javax.swing.JButton();
        btnDeleteAdmin = new javax.swing.JButton();
        btnAddOrder = new javax.swing.JButton();
        btnDeleteOrder = new javax.swing.JButton();
        btnUpdateOrder = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        labelHeader.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelHeader.setText("<Restaurnat Name>");

        tblAdmins.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "User Name", "Name"
            }
        ));
        jScrollPane1.setViewportView(tblAdmins);

        jLabel2.setText("Admins");

        jLabel1.setText("Orders");

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Receiver", "Sender", "Detail", "status"
            }
        ));
        jScrollPane3.setViewportView(tblOrders);

        btnAddAdmin.setText("Add Admin");
        btnAddAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAdminActionPerformed(evt);
            }
        });

        btnDeleteAdmin.setText("Delete Admin");
        btnDeleteAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAdminActionPerformed(evt);
            }
        });

        btnAddOrder.setText("Add Orders");
        btnAddOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOrderActionPerformed(evt);
            }
        });

        btnDeleteOrder.setText("Delete Order");
        btnDeleteOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteOrderActionPerformed(evt);
            }
        });

        btnUpdateOrder.setText("Update Order");
        btnUpdateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateOrderActionPerformed(evt);
            }
        });

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateOrder))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelHeader)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefresh))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddAdmin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteAdmin)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelHeader)
                    .addComponent(btnRefresh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddAdmin)
                    .addComponent(btnDeleteAdmin))
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateOrder)
                    .addComponent(btnDeleteOrder)
                    .addComponent(btnAddOrder)
                    .addComponent(btnBack))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOrderActionPerformed
        JPanel addOrderPanel =  new AddOrderForRestaurantJPanel(container, system, restaurtant);
        container.add("createOrderForRestaurnatArea", addOrderPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_btnAddOrderActionPerformed

    private void btnDeleteOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteOrderActionPerformed
        int row = tblOrders.getSelectedRow();
        if(row < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Order c = (Order)tblOrders.getValueAt(row, 0);
        boolean removeOrder = system.getOrderDirectory().remove(c);
        if(removeOrder){
            JOptionPane.showMessageDialog(null, "Order " + c + " is removed");
            populateData();
        }else{
            JOptionPane.showMessageDialog(null, "cannot remove Order " + c + "");
        }
    }//GEN-LAST:event_btnDeleteOrderActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateOrderActionPerformed
        int row = tblOrders.getSelectedRow();
        if(row < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Order c = (Order)tblOrders.getValueAt(row, 0);
        
        JPanel viewPanel = new ViewOrderDetailJPanel(container, system,c);
        container.add("viewOrderDetailForRestaurantArea", viewPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_btnUpdateOrderActionPerformed

    private void btnAddAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAdminActionPerformed
        JPanel createPanel = new CreateAdminForRestaurant(container, system,restaurtant);
        container.add("createadminForRestaurnatArea", createPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_btnAddAdminActionPerformed

    private void btnDeleteAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAdminActionPerformed
        int row = tblAdmins.getSelectedRow();
        if(row < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(this.restaurtant.getAdmins().size() <= 1){
            JOptionPane.showMessageDialog(null, "cannot remove last admin for "+ this.restaurtant.getRestaruantName(), "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        UserAccount ua = (UserAccount)tblAdmins.getValueAt(row, 1);
        boolean removeUserAccount = true;
        removeUserAccount &= system.getUserAccountDirectory().removeAccount(ua);
        boolean removeAdmin = this.restaurtant.getAdmins().remove(ua);
        if(removeAdmin && removeUserAccount){
            JOptionPane.showMessageDialog(null, "Admin " + ua.getUsername() + " is removed");
            populateData();
        }else{
            JOptionPane.showMessageDialog(null, "cannot remove customer " + ua + "");
            populateData();
        }
        
    }//GEN-LAST:event_btnDeleteAdminActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        populateData();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAdmin;
    private javax.swing.JButton btnAddOrder;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteAdmin;
    private javax.swing.JButton btnDeleteOrder;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdateOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel labelHeader;
    private javax.swing.JTable tblAdmins;
    private javax.swing.JTable tblOrders;
    // End of variables declaration//GEN-END:variables
}
